name: Build and deploy to dev-gcp
on:
  workflow_dispatch:
    inputs:
      config-file-name:
        description: 'Config-fil som skal deployes'
        required: true
        default: 'dev'
        type: choice
        options:
          - 'dev'
          - 'mock'


jobs:
  snyk-monitor:
    if: github.ref == 'refs/heads/main'
    name: monitor dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: monitor
          args: --org=teamdigisos --severity-threshold=high
  snyk-test:
    name: analyze dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: test
          args: --org=teamdigisos --severity-threshold=high
  build:
    name: Build and push docker image
    runs-on: ubuntu-latest
    env:
      DOCKER_IMAGE: ghcr.io/${{ github.repository }}/${{ github.event.repository.name }}
    timeout-minutes: 15
    steps:
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          registry-url: 'https://npm.pkg.github.com'
          cache: 'npm'

          scope: '@navikt'
      - name: Installer dependencies
        run: npm ci
        env:
          NODE_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}
      - name: Test
        run: npm test
      - name: Build app
        run: npm build
      - uses: actions/checkout@v3
      - name: Create artifact version
        id: artifact-version
        uses: navikt/sosialhjelp-ci/actions/create-artifact-version@master
      - name: Login to GitHub Docker Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Get complete tag
        run: |
          echo "COMPLETE_TAG=${{github.event.inputs.config-file-name}}-$( date +%s )-${{ steps.artifact-version.outputs.version }}" >> $GITHUB_ENV
      - name: Create docker image tags
        run: |
          echo "DOCKER_TAG=${{ env.DOCKER_IMAGE }}:${{ env.COMPLETE_TAG }}" >> $GITHUB_ENV
      - name: Build docker image
        run: docker build -t ${{ env.DOCKER_TAG }} .
      - name: Push docker image
        run: |
          docker push ${{ env.DOCKER_TAG }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create tag and release
        uses: ncipollo/release-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag: ${{ env.COMPLETE_TAG }}
          commit: ${{ github.sha }}
      - name: Deploy to dev - ${{ github.event.inputs.config-file-name }}
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: .nais/${{github.event.inputs.config-file-name}}.yml
          REF: ${{ github.sha }}
          PRINT_PAYLOAD: true
          IMAGE: ${{ env.DOCKER_TAG }}
