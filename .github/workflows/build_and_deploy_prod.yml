name: Build and deploy til prod-gcp
on:
  workflow_dispatch:


jobs:
  snyk-monitor:
    if: github.ref == 'refs/heads/main'
    name: monitor dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: monitor
          args: --org=teamdigisos --severity-threshold=high
  snyk-test:
    name: analyze dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: test
          args: --org=teamdigisos --severity-threshold=high
  build:
    name: Build and push docker image
    runs-on: ubuntu-latest
    env:
      DOCKER_IMAGE: ghcr.io/${{ github.repository }}/${{ github.event.repository.name }}
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@navikt'
      - name: Installer dependencies
        run: npm ci && npm --prefix client ci && npm --prefix server ci
        env:
          NODE_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}
      - name: Test
        run: npm run test
      - name: Build app
        run: npm run build
      - name: Create artifact version
        id: artifact-version
        uses: navikt/sosialhjelp-ci/actions/create-artifact-version@master
      - name: Login to GitHub Docker Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Create docker image tags
        run: |
          echo "DOCKER_TAG=${{ env.DOCKER_IMAGE }}:${{ steps.artifact-version.outputs.version }}" >> $GITHUB_ENV
      - name: Build docker image
        run: docker build -t ${{ env.DOCKER_TAG }} .
      - name: Push docker image
        run: |
          docker push ${{ env.DOCKER_TAG }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create tag and release
        uses: ncipollo/release-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag: ${{ steps.artifact-version.outputs.version }}
          commit: ${{ github.sha }}
      - name: Deploy to prod
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: prod-gcp
          VARS: nais/prod/prod.json
          RESOURCE: nais/nais.yml
          REF: ${{ github.sha }}
          PRINT_PAYLOAD: true
          IMAGE: ${{ env.DOCKER_TAG }}

